EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
P8.bin -- emu8086 assembler version: 4.08  
 
[ 26-04-2018  --  14:12:08 ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       ;please copy from here;
[   2]        :                                       
[   3]    0000:                                       VARS:
[   4]        :                                       ;main program
[   5]    0000: 00 00                                 counter dw 00h
[   6]    0002: 00 00 00 00 00 00                     rcounter db 00h,00h,00h,00h,00h,00h
[   7]    0008: 00                                    gate db 0
[   8]    0009: 00                                    strlen DB 0
[   9]    000A: 45 4D 50 54 59                        empty DB 'EMPTY'
[  10]    000F: 46 55 4C 4C                           full DB 'FULL'
[  11]        :                                       
[  12]        :                                       ;8255-0
[  13]        :                                       porta0 equ 00h
[  14]        :                                       portb0 equ 02h
[  15]        :                                       portc0 equ 04h
[  16]        :                                       command_address0 equ 06h
[  17]        :                                       
[  18]        :                                       ;8255-1
[  19]        :                                       
[  20]        :                                       inputs EQU 0Ah
[  21]        :                                       lcd_data EQU 08h
[  22]        :                                       lcd_motor_control EQU 0Ch
[  23]        :                                       creg_io EQU 0Eh
[  24]        :                                       
[  25]    0013: E9 E9 03                              jmp     st1
[  26]    0016: 00 00 00 00 00 00 00 00 00 00 00 00   db     1001 dup(0)
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00                      
[  27]        :                                       
[  28]        :                                       
[  29]        :                                       
[  30]    03FF:                                       st1:
[  31]        :                                       ; intialize ds, es,ss to start of RAM
[  32]    03FF: B8 00 20                              mov       ax,02000h
[  33]    0402: 8E D8                                 mov       ds,ax
[  34]    0404: 8E C0                                 mov       es,ax
[  35]    0406: 8E D0                                 mov       ss,ax
[  36]    0408: BC FE 2F                              mov       sp,02FFEH
[  37]        :                                       
[  38]        :                                       ;intialise porta and portb as input & portc as output for 8255-0
[  39]    040B: B0 92                                 mov     al,92h
[  40]    040D: E6 06                                 out     command_address0,al
[  41]        :                                       
[  42]        :                                       ;initialise porta as output for lcd and portc upper as input and portc lower as output
[  43]        :                                       
[  44]    040F: B0 80                                 MOV AL,10000000b
[  45]    0411: E6 0E                                 OUT creg_io,AL
[  46]    0413: B0 00                                 mov al,00h
[  47]    0415: E6 04                                 out 04h,al
[  48]        :                                       
[  49]        :                                       ;initialise hardware
[  50]        :                                       ; initialise the lcd
[  51]        :                                       ; check for busy status
[  52]        :                                       ; clear the screen
[  53]        :                                       ; display 'empty'
[  54]        :                                       ;writing on the command register for initialization
[  55]        :                                       
[  56]        :                                       
[  57]    0417:                                       startup:
[  58]    0417: B0 0F E6 08 B3 20 E4 0C 24 1F 0A C3   LCD_initialization
                E6 0C B3 00 E4 0C 24 1F 0A C3 E6 0C 
                                                    
[  59]    042F: E8 40 03                              CALL update_the_LCD
[  60]    0432: E8 71 02                              call DELAY_1S
[  61]    0435: E8 6E 02                              call DELAY_1S
[  62]        :                                       ;stopping_the_motor
[  63]        :                                       ;CALL update_the_LCD
[  64]        :                                       ;CALL DELAY_1S
[  65]        :                                       ;calling lcd initialization
[  66]        :                                       
[  67]        :                                       ;;check for entry to door which triggers opening of door
[  68]    0438: E4 02                                 x1: in al,02h
[  69]    043A: 24 80                                 and al,80H
[  70]    043C: 3C 80                                 cmp al,80H
[  71]    043E: 75 2B                                 jnz x2
[  72]    0440: E4 02                                 y1: in al,02h
[  73]    0442: 24 40                                 and al,40h
[  74]    0444: 3C 40                                 cmp al,40h
[  75]    0446: 75 F8                                 jnz y1
[  76]    0448: 83 06 00 00 01                        add counter,1
[  77]    044D: C6 06 08 00 01                        mov gate,1
[  78]    0452: E4 0C 24 FC 0C 01 E6 0C               motor_clockwise
[  79]    045A: E8 49 02                              call DELAY_1S
[  80]    045D: E4 0C 24 FC 0C 00 E6 0C               stopping_the_motor
[  81]    0465: E8 3E 02                              call DELAY_1S
[  82]    0468: E8 3B 02                              call DELAY_1S
[  83]        :                                       
[  84]        :                                       ;;check for exit from door which triggers closing of door
[  85]    046B: E4 02                                 x2: in al,02h
[  86]    046D: 24 40                                 and al,40h
[  87]    046F: 3C 40                                 cmp al,40h
[  88]    0471: 75 2E                                 jnz x3
[  89]    0473: E4 02                                 y2: in al,02h
[  90]    0475: 24 80                                 and al,80H
[  91]    0477: 3C 80                                 cmp al,80H
[  92]    0479: 75 F8                                 jnz y2
[  93]    047B: 83 2E 00 00 01                        sub counter,1
[  94]    0480: C6 06 08 00 00                        mov gate,0
[  95]    0485: E4 0C 24 FC 0C 02 E6 0C               motor_anticlockwise
[  96]    048D: E8 16 02                              call DELAY_1S
[  97]    0490: E4 0C 24 FC 0C 00 E6 0C               stopping_the_motor
[  98]    0498: E8 0B 02                              call DELAY_1S
[  99]    049B: E8 08 02                              call DELAY_1S
[ 100]    049E: E8 C6 02                              call DELAY
[ 101]        :                                       
[ 102]        :                                       ;;check for entry on other side of door which triggers closing of door
[ 103]    04A1: E4 02                                 x3: in al,02h
[ 104]    04A3: 24 20                                 and al,20h
[ 105]    04A5: 3C 20                                 cmp al,20h
[ 106]    04A7: 75 26                                 jnz x4
[ 107]    04A9: E4 02                                 y3: in al,02h
[ 108]    04AB: 24 10                                 and al,10h
[ 109]    04AD: 3C 10                                 cmp al,10h
[ 110]    04AF: 75 F8                                 jnz y3
[ 111]    04B1: C6 06 08 00 00                        mov gate,0
[ 112]    04B6: E4 0C 24 FC 0C 02 E6 0C               motor_anticlockwise
[ 113]    04BE: E8 E5 01                              call DELAY_1S
[ 114]    04C1: E4 0C 24 FC 0C 00 E6 0C               stopping_the_motor
[ 115]    04C9: E8 DA 01                              call DELAY_1S
[ 116]    04CC: E8 D7 01                              call DELAY_1S
[ 117]        :                                       ;;check for exit on other side of door which triggers opening of door
[ 118]    04CF: E4 02                                 x4: in al,02h
[ 119]    04D1: 24 10                                 and al,10h
[ 120]    04D3: 3C 10                                 cmp al,10h
[ 121]    04D5: 75 29                                 jnz x5
[ 122]    04D7: E4 02                                 y4: in al,02h
[ 123]    04D9: 24 20                                 and al,20h
[ 124]    04DB: 3C 20                                 cmp al,20h
[ 125]    04DD: 75 F8                                 jnz y4
[ 126]    04DF: C6 06 08 00 01                        mov gate,1
[ 127]    04E4: E4 0C 24 FC 0C 01 E6 0C               motor_clockwise
[ 128]    04EC: E8 B7 01                              call DELAY_1S
[ 129]    04EF: E4 0C 24 FC 0C 00 E6 0C               stopping_the_motor
[ 130]    04F7: E8 AC 01                              call DELAY_1S
[ 131]    04FA: E8 A9 01                              call DELAY_1S
[ 132]    04FD: E8 67 02                              call DELAY
[ 133]        :                                       ;;check for entry in row1
[ 134]    0500: E4 02                                 x5: in al,02h
[ 135]    0502: 24 08                                 and al,08h
[ 136]    0504: 3C 08                                 cmp al,08h
[ 137]    0506: 75 13                                 jnz x6
[ 138]    0508: E4 02                                 y5: in al,02h
[ 139]    050A: 24 04                                 and al,04h
[ 140]    050C: 3C 04                                 cmp al,04h
[ 141]    050E: 75 F8                                 jnz y5
[ 142]    0510: 80 06 02 00 01                        add rcounter,1
[ 143]        :                                       
[ 144]    0515: E8 8E 01                              call DELAY_1S
[ 145]    0518: E8 8B 01                              call DELAY_1S
[ 146]        :                                       ;;check for exit from row1
[ 147]    051B: E4 02                                 x6: in al,02h
[ 148]    051D: 24 04                                 and al,04h
[ 149]    051F: 3C 04                                 cmp al,04h
[ 150]    0521: 75 13                                 jnz x7
[ 151]    0523: E4 02                                 y6: in al,02h
[ 152]    0525: 24 08                                 and al,08h
[ 153]    0527: 3C 08                                 cmp al,08h
[ 154]    0529: 75 F8                                 jnz y6
[ 155]    052B: 80 2E 02 00 01                        sub rcounter,1
[ 156]    0530: E8 73 01                              call DELAY_1S
[ 157]    0533: E8 70 01                              call DELAY_1S
[ 158]        :                                       ;;check for entry in row2
[ 159]    0536: E4 02                                 x7: in al,02h
[ 160]    0538: 24 02                                 and al,02h
[ 161]    053A: 3C 02                                 cmp al,02h
[ 162]    053C: 75 32                                 jnz x8
[ 163]    053E: E4 02                                 y7: in al,02h
[ 164]    0540: 24 01                                 and al,01h
[ 165]    0542: 3C 01                                 cmp al,01h
[ 166]    0544: 75 F8                                 jnz y7
[ 167]    0546: 80 06 03 00 01                        add rcounter+1,1
[ 168]    054B: E4 0C 24 FC 0C 02 E6 0C               motor_anticlockwise
[ 169]    0553: E8 50 01                              call DELAY_1S
[ 170]    0556: E4 0C 24 FC 0C 00 E6 0C               stopping_the_motor
[ 171]    055E: E8 45 01                              call DELAY_1S
[ 172]    0561: E8 42 01                              call DELAY_1S
[ 173]        :                                       
[ 174]    0564: E8 3F 01                              call DELAY_1S
[ 175]    0567: E8 3C 01                              call DELAY_1S
[ 176]    056A: E8 39 01                              call DELAY_1S
[ 177]    056D: E8 36 01                              call DELAY_1S
[ 178]        :                                       ;;check for exit from row3
[ 179]    0570: E4 02                                 x8: in al,02h
[ 180]    0572: 24 01                                 and al,01h
[ 181]    0574: 3C 01                                 cmp al,01h
[ 182]    0576: 75 13                                 jnz x9
[ 183]    0578: E4 02                                 y8: in al,02h
[ 184]    057A: 24 02                                 and al,02h
[ 185]    057C: 3C 02                                 cmp al,02h
[ 186]    057E: 75 F8                                 jnz y8
[ 187]    0580: 80 2E 03 00 01                        sub rcounter+1,1
[ 188]    0585: E8 1E 01                              call DELAY_1S
[ 189]    0588: E8 1B 01                              call DELAY_1S
[ 190]        :                                       ;;check for entry in row3
[ 191]    058B: E4 00                                 x9: in al,00h
[ 192]    058D: 24 80                                 and al,80H
[ 193]    058F: 3C 80                                 cmp al,80H
[ 194]    0591: 75 13                                 jnz x10
[ 195]    0593: E4 00                                 y9: in al,00h
[ 196]    0595: 24 40                                 and al,40h
[ 197]    0597: 3C 40                                 cmp al,40h
[ 198]    0599: 75 F8                                 jnz y9
[ 199]    059B: 80 06 04 00 01                        add rcounter+2,1
[ 200]    05A0: E8 03 01                              call DELAY_1S
[ 201]    05A3: E8 00 01                              call DELAY_1S
[ 202]        :                                       ;;check for exit from row3
[ 203]    05A6: E4 00                                 x10: in al,00h
[ 204]    05A8: 24 40                                 and al,40H
[ 205]    05AA: 3C 40                                 cmp al,40H
[ 206]    05AC: 75 13                                 jnz x11
[ 207]    05AE: E4 00                                 y10: in al,00h
[ 208]    05B0: 24 80                                 and al,80h
[ 209]    05B2: 3C 80                                 cmp al,80h
[ 210]    05B4: 75 F8                                 jnz y10
[ 211]    05B6: 80 2E 04 00 01                        sub rcounter+2,1
[ 212]    05BB: E8 E8 00                              call DELAY_1S
[ 213]    05BE: E8 E5 00                              call DELAY_1S
[ 214]        :                                       ;;check for entry in row4
[ 215]    05C1: E4 00                                 x11: in al,00h
[ 216]    05C3: 24 20                                 and al,20h
[ 217]    05C5: 3C 20                                 cmp al,20h
[ 218]    05C7: 75 13                                 jnz x12
[ 219]    05C9: E4 00                                 y11: in al,00h
[ 220]    05CB: 24 10                                 and al,10h
[ 221]    05CD: 3C 10                                 cmp al,10h
[ 222]    05CF: 75 F8                                 jnz y11
[ 223]    05D1: 80 06 05 00 01                        add rcounter+3,1
[ 224]    05D6: E8 CD 00                              call DELAY_1S
[ 225]    05D9: E8 CA 00                              call DELAY_1S
[ 226]        :                                       ;;check for exit from row4
[ 227]    05DC: E4 00                                 x12: in al,00h
[ 228]    05DE: 24 10                                 and al,10H
[ 229]    05E0: 3C 10                                 cmp al,10H
[ 230]    05E2: 75 13                                 jnz x13
[ 231]    05E4: E4 00                                 y12: in al,00h
[ 232]    05E6: 24 20                                 and al,20h
[ 233]    05E8: 3C 20                                 cmp al,20h
[ 234]    05EA: 75 F8                                 jnz y12
[ 235]    05EC: 80 2E 05 00 01                        sub rcounter+3,1
[ 236]    05F1: E8 B2 00                              call DELAY_1S
[ 237]    05F4: E8 AF 00                              call DELAY_1S
[ 238]        :                                       ;;check for entry in row5
[ 239]    05F7: E4 00                                 x13: in al,00h
[ 240]    05F9: 24 08                                 and al,08h
[ 241]    05FB: 3C 08                                 cmp al,08h
[ 242]    05FD: 75 13                                 jnz x14
[ 243]    05FF: E4 00                                 y13: in al,00h
[ 244]    0601: 24 04                                 and al,04h
[ 245]    0603: 3C 04                                 cmp al,04h
[ 246]    0605: 75 F8                                 jnz y13
[ 247]    0607: 80 06 06 00 01                        add rcounter+4,1
[ 248]    060C: E8 97 00                              call DELAY_1S
[ 249]    060F: E8 94 00                              call DELAY_1S
[ 250]        :                                       ;;check for exit from row5
[ 251]    0612: E4 00                                 x14: in al,00h
[ 252]    0614: 24 04                                 and al,04H
[ 253]    0616: 3C 04                                 cmp al,04H
[ 254]    0618: 75 13                                 jnz x15
[ 255]    061A: E4 00                                 y14: in al,00h
[ 256]    061C: 24 08                                 and al,08h
[ 257]    061E: 3C 08                                 cmp al,08h
[ 258]    0620: 75 F8                                 jnz y14
[ 259]    0622: 80 2E 06 00 01                        sub rcounter+4,1
[ 260]    0627: E8 7C 00                              call DELAY_1S
[ 261]    062A: E8 79 00                              call DELAY_1S
[ 262]        :                                       ;;check for entry in row6
[ 263]    062D: E4 00                                 x15: in al,00h
[ 264]    062F: 24 02                                 and al,02h
[ 265]    0631: 3C 02                                 cmp al,02h
[ 266]    0633: 75 13                                 jnz x16
[ 267]    0635: E4 00                                 y15: in al,00h
[ 268]    0637: 24 01                                 and al,01h
[ 269]    0639: 3C 01                                 cmp al,01h
[ 270]    063B: 75 F8                                 jnz y15
[ 271]    063D: 80 06 07 00 01                        add rcounter+5,1
[ 272]    0642: E8 61 00                              call DELAY_1S
[ 273]    0645: E8 5E 00                              call DELAY_1S
[ 274]        :                                       ;;check for exit from row6
[ 275]    0648: E4 00                                 x16: in al,00h
[ 276]    064A: 24 01                                 and al,01H
[ 277]    064C: 3C 01                                 cmp al,01H
[ 278]    064E: 75 13                                 jnz x
[ 279]    0650: E4 00                                 y16: in al,00h
[ 280]    0652: 24 02                                 and al,02h
[ 281]    0654: 3C 02                                 cmp al,02h
[ 282]    0656: 75 F8                                 jnz y16
[ 283]    0658: 80 2E 07 00 01                        sub rcounter+5,1
[ 284]    065D: E8 46 00                              call DELAY_1S
[ 285]    0660: E8 43 00                              call DELAY_1S
[ 286]        :                                       ;;output for leds is made 1 wherever rcounter is 1
[ 287]        :                                       
[ 288]    0663: B0 00                                 x:  mov al,00000000b
[ 289]    0665: B3 01                                 mov bl,00000001b
[ 290]    0667: B9 06 00                              mov cx,06h
[ 291]    066A: BE 02 00                              lea si,rcounter
[ 292]    066D: 8A 14                                 y:  mov dl,[si]
[ 293]    066F: 80 FA 00                              cmp dl,00H
[ 294]    0672: 75 02                                 jnz z
[ 295]    0674: EB 02                                 jmp w
[ 296]    0676: 0A C3                                 z:  or al,bl
[ 297]        :                                       
[ 298]    0678: D0 C3                                 w:  rol bl,1
[ 299]    067A: 83 C6 01                              add si,1
[ 300]    067D: 49                                    dec cx
[ 301]    067E: 83 F9 00                              cmp cx,00h
[ 302]    0681: 75 EA                                 jnz y
[ 303]    0683: E6 04                                 out 04h,al
[ 304]    0685: E8 1E 00                              call DELAY_1S
[ 305]    0688: E8 1B 00                              call DELAY_1S
[ 306]    068B: E8 18 00                              call DELAY_1S
[ 307]    068E: E8 15 00                              call DELAY_1S
[ 308]    0691: E8 12 00                              call DELAY_1S
[ 309]    0694: E8 0F 00                              call DELAY_1S
[ 310]    0697: E8 0C 00                              call DELAY_1S
[ 311]    069A: E8 09 00                              call DELAY_1S
[ 312]    069D: E8 06 00                              call DELAY_1S
[ 313]        :                                       
[ 314]        :                                       
[ 315]    06A0: E8 CF 00                              disp: CALL update_the_LCD
[ 316]    06A3: E9 92 FD                              jmp x1
[ 317]        :                                       
[ 318]        :                                       ;;;;;UPTIL HERE ALL LEDS IN THE ROWS WITH NON ZERO COUNT WILL GLOW
[ 319]    06A6:                                       DELAY_1S PROC
[ 320]    06A6: E8 BE 00                              CALL DELAY
[ 321]    06A9: E8 BB 00                              CALL DELAY
[ 322]    06AC: E8 B8 00                              CALL DELAY
[ 323]    06AF: E8 B5 00                              CALL DELAY
[ 324]    06B2: E8 B2 00                              CALL DELAY
[ 325]    06B5: E8 AF 00                              CALL DELAY
[ 326]    06B8: E8 AC 00                              CALL DELAY
[ 327]    06BB: E8 A9 00                              CALL DELAY
[ 328]    06BE: E8 A6 00                              CALL DELAY
[ 329]    06C1: E8 A3 00                              CALL DELAY
[ 330]    06C4: E8 A0 00                              CALL DELAY
[ 331]    06C7: E8 9D 00                              CALL DELAY
[ 332]    06CA: E8 9A 00                              CALL DELAY
[ 333]    06CD: E8 97 00                              CALL DELAY
[ 334]    06D0: E8 94 00                              CALL DELAY
[ 335]    06D3: E8 91 00                              CALL DELAY
[ 336]    06D6: E8 8E 00                              CALL DELAY
[ 337]    06D9: E8 8B 00                              CALL DELAY
[ 338]    06DC: E8 88 00                              CALL DELAY
[ 339]    06DF: E8 85 00                              CALL DELAY
[ 340]    06E2: E8 82 00                              CALL DELAY
[ 341]    06E5: E8 7F 00                              CALL DELAY
[ 342]    06E8: E8 7C 00                              CALL DELAY
[ 343]    06EB: E8 79 00                              CALL DELAY
[ 344]    06EE: E8 76 00                              CALL DELAY
[ 345]    06F1: E8 73 00                              CALL DELAY
[ 346]    06F4: E8 70 00                              CALL DELAY
[ 347]    06F7: E8 6D 00                              CALL DELAY
[ 348]    06FA: E8 6A 00                              CALL DELAY
[ 349]    06FD: E8 67 00                              CALL DELAY
[ 350]    0700: E8 64 00                              CALL DELAY
[ 351]    0703: E8 61 00                              CALL DELAY
[ 352]    0706: E8 5E 00                              CALL DELAY
[ 353]    0709: E8 5B 00                              CALL DELAY
[ 354]    070C: E8 58 00                              CALL DELAY
[ 355]    070F: E8 55 00                              CALL DELAY
[ 356]    0712: E8 52 00                              CALL DELAY
[ 357]    0715: E8 4F 00                              CALL DELAY
[ 358]    0718: E8 4C 00                              CALL DELAY
[ 359]    071B: E8 49 00                              CALL DELAY
[ 360]    071E: E8 46 00                              CALL DELAY
[ 361]    0721: E8 43 00                              CALL DELAY
[ 362]    0724: E8 40 00                              CALL DELAY
[ 363]    0727: E8 3D 00                              CALL DELAY
[ 364]    072A: E8 3A 00                              CALL DELAY
[ 365]    072D: E8 37 00                              CALL DELAY
[ 366]    0730: E8 34 00                              CALL DELAY
[ 367]    0733: E8 31 00                              CALL DELAY
[ 368]    0736: E8 2E 00                              CALL DELAY
[ 369]    0739: E8 2B 00                              CALL DELAY
[ 370]    073C: E8 28 00                              CALL DELAY
[ 371]    073F: E8 25 00                              CALL DELAY
[ 372]    0742: E8 22 00                              CALL DELAY
[ 373]    0745: E8 1F 00                              CALL DELAY
[ 374]    0748: E8 1C 00                              CALL DELAY
[ 375]    074B: E8 19 00                              CALL DELAY
[ 376]    074E: E8 16 00                              CALL DELAY
[ 377]    0751: E8 13 00                              CALL DELAY
[ 378]    0754: E8 10 00                              CALL DELAY
[ 379]    0757: E8 0D 00                              CALL DELAY
[ 380]    075A: E8 0A 00                              CALL DELAY
[ 381]    075D: E8 07 00                              CALL DELAY
[ 382]    0760: E8 04 00                              CALL DELAY
[ 383]    0763: E8 01 00                              CALL DELAY
[ 384]    0766: C3                                    ret
[ 385]        :                                       DELAY_1s endp
[ 386]        :                                       
[ 387]    0767:                                       DELAY PROC
[ 388]    0767: B9 2D 05                              MOV CX, 1325 ;1325*15.085 usec = 20 msec
[ 389]    076A:                                       W1:
[ 390]    076A: 90                                    NOP
[ 391]    076B: 90                                    NOP
[ 392]    076C: 90                                    NOP
[ 393]    076D: 90                                    NOP
[ 394]    076E: 90                                    NOP
[ 395]    076F: E2 F9                                 LOOP W1
[ 396]    0771: C3                                    RET
[ 397]        :                                       DELAY ENDP
[ 398]        :                                       
[ 399]    0772:                                       macros:
[ 400]        :                                       
[ 401]        :                                       motor_anticlockwise MACRO
[ 402]        :                                       IN AL, lcd_motor_control
[ 403]        :                                       AND AL, 11111100b
[ 404]        :                                       OR AL, 00000010b
[ 405]        :                                       OUT lcd_motor_control, AL
[ 406]        :                                       ENDM
[ 407]        :                                       
[ 408]        :                                       motor_clockwise MACRO
[ 409]        :                                       IN AL, lcd_motor_control
[ 410]        :                                       AND AL, 11111100b
[ 411]        :                                       OR AL, 00000001b
[ 412]        :                                       OUT lcd_motor_control, AL
[ 413]        :                                       ENDM
[ 414]        :                                       
[ 415]        :                                       stopping_the_motor MACRO
[ 416]        :                                       IN AL, lcd_motor_control
[ 417]        :                                       AND AL, 11111100b
[ 418]        :                                       OR AL, 00000000b
[ 419]        :                                       OUT lcd_motor_control, AL
[ 420]        :                                       ENDM
[ 421]        :                                       
[ 422]        :                                       set_the_LCD_mode MACRO
[ 423]        :                                       		IN AL, lcd_motor_control
[ 424]        :                                       		AND AL, 00011111b
[ 425]        :                                       		OR AL, BL
[ 426]        :                                       		OUT lcd_motor_control, AL
[ 427]        :                                       ENDM
[ 428]        :                                       
[ 429]        :                                       LCD_initialization MACRO
[ 430]        :                                       		MOV AL, 00001111b
[ 431]        :                                       		OUT lcd_data, AL
[ 432]        :                                       		MOV BL, 00100000b
[ 433]        :                                       set_the_LCD_mode
[ 434]        :                                       		MOV BL, 00000000b
[ 435]        :                                       set_the_LCD_mode
[ 436]        :                                       ENDM
[ 437]        :                                       
[ 438]        :                                       lcd_clear MACRO
[ 439]        :                                       		MOV AL, 00000001b
[ 440]        :                                       OUT lcd_data, AL
[ 441]        :                                       		MOV BL,00100000b
[ 442]        :                                       set_the_LCD_mode
[ 443]        :                                       		MOV BL,00000000b
[ 444]        :                                       set_the_LCD_mode
[ 445]        :                                       ENDM
[ 446]        :                                       
[ 447]        :                                       lcd_putch MACRO
[ 448]        :                                       		PUSH AX
[ 449]        :                                       		OUT lcd_data,AL
[ 450]        :                                       		;call DELAY_1S
[ 451]        :                                       		MOV BL,10100000b
[ 452]        :                                       set_the_LCD_mode
[ 453]        :                                       		MOV BL,10000000b
[ 454]        :                                       set_the_LCD_mode
[ 455]        :                                       		POP AX
[ 456]        :                                       		ENDM
[ 457]        :                                       
[ 458]        :                                       putstring_on_LCD MACRO
[ 459]        :                                       		MOV CH,00H
[ 460]        :                                       		MOV CL, strlen
[ 461]        :                                       putting:
[ 462]        :                                       		MOV AL, [DI]
[ 463]        :                                       lcd_putch
[ 464]        :                                       		INC DI
[ 465]        :                                       		LOOP putting
[ 466]        :                                       ENDM
[ 467]        :                                       
[ 468]        :                                       lcd_bcd MACRO
[ 469]        :                                       		MOV AX, counter
[ 470]        :                                       		MOV CX, 0
[ 471]        :                                       converting:
[ 472]        :                                       		MOV BL, 10
[ 473]        :                                       		DIV BL
[ 474]        :                                       		ADD AH, '0'
[ 475]        :                                       		MOV BL, AH
[ 476]        :                                       		MOV BH, 0
[ 477]        :                                       		PUSH BX
[ 478]        :                                       		INC CX
[ 479]        :                                       		MOV AH, 0
[ 480]        :                                       		CMP AX, 0
[ 481]        :                                       JNE converting
[ 482]        :                                       printing:
[ 483]        :                                       POP AX
[ 484]        :                                       lcd_putch
[ 485]        :                                       LOOP printing
[ 486]        :                                       ENDM
[ 487]        :                                       
[ 488]    0772:                                       procs:
[ 489]    0772:                                       		update_the_LCD PROC NEAR
[ 490]    0772: B0 01 E6 08 B3 20 E4 0C 24 1F 0A C3   		lcd_clear
                E6 0C B3 00 E4 0C 24 1F 0A C3 E6 0C 
                                                    
[ 491]    078A: B0 20                                 		MOV AL, ' '
[ 492]    078C: 50 E6 08 B3 A0 E4 0C 24 1F 0A C3 E6   		lcd_putch
                0C B3 80 E4 0C 24 1F 0A C3 E6 0C 58 
                                                    
[ 493]    07A4: 83 3E 00 00 00                        		CMP counter,00h
[ 494]    07A9: 75 0A                                 		JNZ notempty
[ 495]    07AB: BF 0A 00                              		LEA DI, empty
[ 496]    07AE: C6 06 09 00 05                        		MOV strlen, 05H
[ 497]    07B3: EB 48                                 		JMP loaded
[ 498]    07B5:                                       		notempty:
[ 499]    07B5: 81 3E 00 00 C8 00                     		CMP counter,200
[ 500]    07BB: 7C 0A                                 		JL notfull
[ 501]    07BD: BF 0F 00                              		LEA DI, full
[ 502]    07C0: C6 06 09 00 04                        		MOV strlen, 04H
[ 503]    07C5: EB 36                                 		JMP loaded
[ 504]    07C7:                                       		notfull:
[ 505]    07C7: A1 00 00 B9 00 00 B3 0A F6 F3 80 C4   		lcd_bcd
                30 8A DC B7 00 53 41 B4 00 3D 00 00 
                75 EC 58 50 E6 08 B3 A0 E4 0C 24 1F 
                0A C3 E6 0C B3 80 E4 0C 24 1F 0A C3 
                E6 0C 58 E2 E5                      
[ 506]    07FC: C3                                    		RET
[ 507]    07FD:                                       		loaded:
[ 508]        :                                       		;call DELAY_1S
[ 509]    07FD: B5 00 8A 0E 09 00 8A 05 50 E6 08 B3   		putstring_on_LCD
                A0 E4 0C 24 1F 0A C3 E6 0C B3 80 E4 
                0C 24 1F 0A C3 E6 0C 58 47 E2 E3    
[ 510]    0820: E8 83 FE                              		call DELAY_1S
[ 511]        :                                       			; call DELAY_1S
[ 512]    0823: C3                                    		RET
[ 513]        :                                       		update_the_LCD ENDP
[ 514]        :                                       
[ 515]        :                                       
[ 516]        :                                       
[ 517]        :                                       
[ 518]        :                                       
[ 519]        :                                       
 
===================================================================================================
 




===================================================================================================
